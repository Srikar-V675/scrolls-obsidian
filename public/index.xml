<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>ðŸ“œ Scrolls</title>
      <link>https://quartz.jzhao.xyz</link>
      <description>Last 10 notes on ðŸ“œ Scrolls</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Welcome to My Scrolls</title>
    <link>https://quartz.jzhao.xyz/</link>
    <guid>https://quartz.jzhao.xyz/</guid>
    <description> My name is Srikar V. I have always been a fan of these digital gardens, blogs I see online all beautifully structured and done. And to my shocking they were most of the time obsidian vaults.</description>
    <pubDate>Tue, 05 Nov 2024 19:09:48 GMT</pubDate>
  </item><item>
    <title>index</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/</guid>
    <description></description>
    <pubDate>Tue, 05 Nov 2024 19:09:48 GMT</pubDate>
  </item><item>
    <title>types of graph edges</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/types-of-graph-edges</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/types-of-graph-edges</guid>
    <description>Graph Edges Captures We all know the main type of edges and they are directed and undirected edges. But we also need to know that there are several other types of edges that branch out from these two but have different significance based on the graphs.</description>
    <pubDate>Tue, 05 Nov 2024 18:48:00 GMT</pubDate>
  </item><item>
    <title>two-pointers</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/two-pointers</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/two-pointers</guid>
    <description>Two-Pointers Summary Moving 2 pointers in a array based on a condition Used when you want to optimise a O(n^2) time â†’ O(n) time and O(n) space â†’ O(1) space ...</description>
    <pubDate>Tue, 05 Nov 2024 18:47:00 GMT</pubDate>
  </item><item>
    <title>trees</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/trees</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/trees</guid>
    <description>Trees Summary Trees are abstract non-sequential data structures that are really just a bunch of nodes and links that are connected to one another. trees are undirected and connected acyclic graphs, they are acyclic because they do not contain cycles or loops.</description>
    <pubDate>Tue, 05 Nov 2024 18:46:00 GMT</pubDate>
  </item><item>
    <title>tree depth traversals</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/tree-depth-traversals</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/tree-depth-traversals</guid>
    <description>Tree Depth Traversals Summary Since trees are unstructured data structures and unique. The way we can access the nodes is by traversing in a unique way, one such way is to traverse by depth.</description>
    <pubDate>Tue, 05 Nov 2024 18:45:00 GMT</pubDate>
  </item><item>
    <title>tree level order traversal</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/tree-level-order-traversal</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/tree-level-order-traversal</guid>
    <description>Level Order Traversal Summary Level Order Traversal as the name suggests, we traverse the tree by visiting every node in each level. We always go from left to right and hence it is also called breadth first search.</description>
    <pubDate>Tue, 05 Nov 2024 18:45:00 GMT</pubDate>
  </item><item>
    <title>tree depth traversal use cases</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/tree-depth-traversal-use-cases</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/tree-depth-traversal-use-cases</guid>
    <description>Depth Traversal Use cases Summary We know tree depth traversals have different ordering and each of these ordering have their own unique use cases that help us for efficient operations ...</description>
    <pubDate>Tue, 05 Nov 2024 18:43:00 GMT</pubDate>
  </item><item>
    <title>tim sort</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/tim-sort</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/tim-sort</guid>
    <description>Tim Sort Summary Tim sort is a hybrid, stable sorting algorithm designed by Tim Peters in 2002, it combines merge and insertion sort to efficiently sort ...</description>
    <pubDate>Tue, 05 Nov 2024 18:42:00 GMT</pubDate>
  </item><item>
    <title>strings</title>
    <link>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/strings</link>
    <guid>https://quartz.jzhao.xyz/%F0%9F%A5%B7%F0%9F%8F%BD-jutsus/strings</guid>
    <description>Strings Summary Very similar to Arrays because they are sequence of characters while Arrays are sequence of a single data type. Common Things Common data structures for looking up strings - Trie/Prefix tree - Suffix tree Common algorithms for searching substrings - Rabin-Karp Algorithm - KMP Time Complexity OperationBig-OAccessO(1)SearchO(n)InsertO(n)RemoveO(n) Operations Involving Another String OperationBig-ONoteFind substringO(n.m)This is the most naive case.</description>
    <pubDate>Tue, 05 Nov 2024 18:41:00 GMT</pubDate>
  </item>
    </channel>
  </rss>
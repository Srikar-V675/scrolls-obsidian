{"index":{"title":"Welcome to Quartz","links":[],"tags":[],"content":"This is a blank Quartz installation.\nSee the documentation for how to get started."},"scrolls/Hash-Table-example.excalidraw":{"title":"Hash-Table-example.excalidraw","links":[],"tags":["excalidraw"],"content":"⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠ You can decompress Drawing data with the command palette: ‘Decompress current Excalidraw file’. For more info check in plugin settings under ‘Saving’\nExcalidraw Data\nText Elements\n“The Book of Life” \nHashing algorithm:\nIt takes the no.\nof letters in the\nbook title &amp; does\na modulo operator\nwith size of hash\ntable. \nindex of\narray \nThe Book of Life \nidx \nval "},"scrolls/hash-functions":{"title":"hash functions","links":["hash-tables","scrolls/Hash-Table-example.excalidraw","Arrays"],"tags":[],"content":"Hash Functions\nSummary\nHash functions are an integral part of hash tables. These functions let us map a key to a value, it performs some kind of operation on the key to determine the index in which the value should be stored in hash tables.\nThe value can be an index to an array that contains the actual value or the value itself.\n\n\n                  \n                  Example\n                  \n                \n\nIf The Book of Life is the key then the value could be the row in the shelf in which the book is in the library. Here the shelf can be the array and the row is the index of the array.\n\n\nTransclude of Hash-Table-example.excalidraw\n]\nEach index of the hash tables are called buckets and can sometimes hold more than one value, this scenario is called a collision.\n\n\n                  \n                  Example\n                  \n                \n\nAn example of a collision would be if there was another book with 13 letters in the above example then even that book would belong to the bucket-1 in hash table.\n\n\nThe concept of collisions is still a better idea than searching the entire array because we are decreasing the search space drastically, but collisions can cause a problem if majority of elements are mapped to a single bucket. Hence a good hash function is one that can distribute the keys equally among the buckets and is easy to compute.\n\nKey Terms\nBuckets: refers to each index of hash tables that stores a value.\nCollisions: can happen when two keys belong to the same bucket in hash tables.\nRelated Notes\nArrays\nhash tables\nReferences(links)\nHashing Out Hash Functions. Over the course of the past few months… | by Vaidehi Joshi | basecs | Medium"},"scrolls/mermaid":{"title":"mermaid","links":[],"tags":[],"content":"graph TD\nA --&gt; B\nIF --&gt; YES\n"}}